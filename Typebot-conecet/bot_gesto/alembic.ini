# =========================================
# alembic.ini - versão avançada assíncrona
# =========================================

[alembic]
# Diretório onde ficam as migrations
script_location = alembic
# Subpasta com as versões
version_locations = %(here)s/alembic/versions

# URL do banco via variável de ambiente
# IMPORTANTE: use driver assíncrono (asyncpg) na sua env
# Exemplo no .env:
# DATABASE_URL=postgresql+asyncpg://user:pass@host:5432/dbname
sqlalchemy.url = ${DATABASE_URL}

# Ativa execução assíncrona (env.py deve usar asyncio + asyncpg)
sqlalchemy.asyncio = true

# =========================================
# Logging detalhado
# =========================================
[loggers]
keys = root,sqlalchemy,alembic

[handlers]
keys = console

[formatters]
keys = generic

# Logger raiz
[logger_root]
level = INFO
handlers = console
qualname =

# Logger SQLAlchemy
[logger_sqlalchemy]
level = INFO
handlers = console
qualname = sqlalchemy.engine

# Logger Alembic
[logger_alembic]
level = INFO
handlers = console
qualname = alembic

# Handler de console
[handler_console]
class = StreamHandler
args = (sys.stderr,)
level = NOTSET
formatter = generic

# Formatter genérico
[formatter_generic]
format = %(asctime)s [%(levelname)s] %(name)s: %(message)s
datefmt = %Y-%m-%d %H:%M:%S

# =========================================
# Hooks opcionais pós-migration
# =========================================
[post_write_hooks]
# Exemplo: rodar black ou isort nas migrations criadas automaticamente
# hooks = black,isort

# [post_write_hooks.black]
# type = console_scripts
# entrypoint = black
# options = -l 88

# [post_write_hooks.isort]
# type = console_scripts
# entrypoint = isort
# options = --profile black